population_size: 20
generation_limit: 200
target_fitness: 1.0
plotting: true
logging: true

ea: !!python/object:ea_impl.one_max_problem.OneMaxEA {}

adult_selector: !!python/object:ea.adult_selection.FullGenerationalReplacementAdultSelector {}
parent_selector: !!python/object:ea.parent_selection.SigmaScalingParentSelector {}

individual_factory: !!python/object:ea_impl.one_max_problem.OneMaxIndividualFactory {}
phenotype_convertor: !!python/object:ea.individual.BasicPhenotypeConvertor {}
fitness_evaluator: !!python/object:ea_impl.one_max_problem.OneMaxFitnessEvaluator {}

mutation_strategy: !!python/object:ea.mutation.BinaryVectorInversionMutation {mutation_rate: 0.01}
crossover_strategy: !!python/object:ea.crossover.OnePointCrossover {crossover_rate: 0.9}

# task-specific parameters
gene_length: 40


## Notes:
## one-max with pop=20, len=20 performs really badly on Fitness Proportionate. However, Sigma Scaling makes a huge
## difference and makes it possible to reach the desired fitness in ~50 generations
##